{"version":3,"sources":["components/Footer/Footer.module.css","components/FieldGame/FieldGame.module.css","components/ChooseTheme/ChooseTheme.module.css","components/ChooseSizeField/ChooseSizeField.module.css","components/PageStart/PageStart.module.css","components/Header/Header.module.css","components/Settings/Settings.module.css","components/Header/Header.jsx","utils/colorCreator.js","utils/AudioPlayer.js","components/ChooseTheme/ChooseTheme.jsx","components/ChooseSizeField/ChooseSizeField.jsx","components/Settings/Settings.jsx","components/PageStart/PageStart.jsx","components/FieldGame/FieldGameView.jsx","components/FieldGame/FieldGame.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","header","colorCreator","getColors","el","theme","r","g","b","a","getFieldStyle","fieldSize","width","height","getNewData","data","slice","audioPlayer","setFileAndPlay","audioEl","file","src","URL","createObjectURL","load","play","_data","createAnalyser","this","contextNew","AudioContext","src2","createMediaElementSource","analyser","connect","destination","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","ChooseTheme","props","map","i","key","element","type","onChange","e","setTheme","target","value","name","chooseTheme","ChooseSizeField","fields","choose","setFieldSize","wrapper","Settings","settings","PageStart","useState","isLanguageEn","setLanguage","descriptions","false","true","taskDescription","buttonAndHref","onClick","href","rel","FieldGameView","setMusic","audioElRef","fieldWidth","newData","isButtonPressed","cells","newColor","style","backgroundColor","cell","audioSection","accept","input","ref","controls","audio","container","FieldGame","useRef","setData","pressButton","renderFrame","async","requestAnimationFrame","getByteFrequencyData","Array","from","files","current","Footer","footer","blockTitle","hrefToPortfolio","socialBlock","socialIcon","size","icon","faLinkedin","faTelegram","faGithub","faGoogle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68e39aa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1rCrN\",\"container\":\"Footer_container__14cuy\",\"blockTitle\":\"Footer_blockTitle__lqVAw\",\"socialBlock\":\"Footer_socialBlock__3HfM3\",\"socialIcon\":\"Footer_socialIcon__SGJNP\",\"hrefToPortfolio\":\"Footer_hrefToPortfolio__85dTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FieldGame_wrapper__3sQcg\",\"container\":\"FieldGame_container__uscdW\",\"audio\":\"FieldGame_audio__1k6_D\",\"audioSection\":\"FieldGame_audioSection__6xGGo\",\"input\":\"FieldGame_input__2E8nk\",\"block\":\"FieldGame_block__1BHYD\",\"cell\":\"FieldGame_cell__16CUM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chooseTheme\":\"ChooseTheme_chooseTheme__3U8fj\",\"element\":\"ChooseTheme_element__hZTGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choose\":\"ChooseSizeField_choose__kRKr3\",\"wrapper\":\"ChooseSizeField_wrapper__2-dE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskDescription\":\"PageStart_taskDescription__2bMyt\",\"buttonAndHref\":\"PageStart_buttonAndHref__2ULO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fT5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1E7Dd\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\n\r\nfunction Header() {\r\n    return <header className={styles.header} >\r\n            <h1>VISUALIZER</h1>\r\n        </header>\r\n}\r\n\r\nexport default Header;\r\n","const colorCreator = {\r\n    getColors(el, theme) {\r\n        let r = 0;\r\n        let g = 0;\r\n        let b = 0;\r\n        let a = 255 / el;\r\n        switch (theme) {\r\n            case 'Six-colors':\r\n                r = (el < 40) ? el : 0;\r\n                r = (el > 75 && el < 120) ? el : r;\r\n                r = (el > 160 && el < 210) ? el : r;\r\n                g = (el > 20 && el < 70) ? el : 0;\r\n                g = (el > 100 && el < 150) ? el : g;\r\n                g = (el > 190 && el < 240) ? el : g;\r\n                b = (el > 50 && el < 95) ? el : 0;\r\n                b = (el > 130 && el < 180) ? el : b;\r\n                b = (el > 220) ? el : b;\r\n                break;\r\n            case 'Blue-green-red':\r\n                r = (el < 30) ? el : 0;\r\n                r = (el > 85 && el < 110) ? el : r;\r\n                r = (el > 170 && el < 200) ? el : r;\r\n                g = (el > 30 && el < 60) ? el : 0;\r\n                g = (el > 110 && el < 140) ? el : g;\r\n                g = (el > 200 && el < 230) ? el : g;\r\n                b = (el > 60 && el < 85) ? el : 0;\r\n                b = (el > 140 && el < 170) ? el : b;\r\n                b = (el > 230) ? el : b;\r\n                break;\r\n            case 'Red-blue':\r\n                r = el;\r\n                g = 0;\r\n                b = 255 - el;\r\n                break;\r\n            case 'Green-blue':\r\n                r = 0;\r\n                g = el;\r\n                b = 255 - el;\r\n                break;\r\n            case 'Blue-green':\r\n                r = 0;\r\n                g = 255 - el;\r\n                b = el;\r\n                break;\r\n            case 'Pink-blue':\r\n                r = el;\r\n                g = 255 - el;\r\n                b = 255;\r\n                break;\r\n            case 'Red-green':\r\n                r = el;\r\n                g = 255 - el;\r\n                b = 0;\r\n                break;\r\n            case 'Pink-green':\r\n                r = el;\r\n                g = 255 - el;\r\n                b = el;\r\n                break;\r\n            default:\r\n                r = 255 - el;\r\n                g = el;\r\n                b = 255 - el;\r\n        }\r\n        return \"rgb(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    },\r\n    getFieldStyle(fieldSize) {\r\n        switch (fieldSize) {\r\n            case '10*2':\r\n                return {width: 10 * 54 + 'px', height: 2 * 54 + 'px'};\r\n            case '5*5':\r\n                return {width: 5 * 54 + 'px', height: 5 * 54 + 'px'};\r\n            case '16*9':\r\n                return {width: 16 * 54 + 'px', height: 9 * 54 + 'px'};\r\n            case '10*10':\r\n                return {width: 10 * 54 + 'px', height: 10 * 54 + 'px'};\r\n            case '12*8':\r\n                return {width: 12 * 54 + 'px', height: 8 * 54 + 'px'};\r\n            case '17*10':\r\n                return {width: 17 * 54 + 'px', height: 10 * 54 + 'px'};\r\n            default:\r\n                return {width: 16 * 54 + 'px', height: 9 * 54 + 'px'};\r\n        }\r\n    },\r\n    getNewData(fieldSize, data){\r\n        switch (fieldSize) {\r\n            case '10*2':\r\n                return data.slice(0, 20);\r\n            case '5*5':\r\n                return data.slice(0, 25);\r\n            case '16*9':\r\n                return data.slice(0, 144);\r\n            case '10*10':\r\n                return data.slice(0, 100);\r\n            case '12*8':\r\n                return data.slice(0, 96);\r\n            case '17*10':\r\n                return data.slice(0, 170);\r\n            default:\r\n                return data.slice(0, 144);\r\n        }\r\n    }\r\n};\r\n\r\nexport default colorCreator;","const audioPlayer = {\r\n    setFileAndPlay(audioEl, file) {\r\n        audioEl.src = URL.createObjectURL(file);\r\n        audioEl.load();\r\n        audioEl.play();\r\n    },\r\n\r\n    _data: null,\r\n\r\n    createAnalyser(audioEl) {\r\n        if (this._data) return this._data;\r\n\r\n        let contextNew = new AudioContext();\r\n        //setContext(contextNew);\r\n        //pressButton(true);\r\n        let src2 = contextNew.createMediaElementSource(audioEl);\r\n        let analyser = contextNew.createAnalyser();\r\n        src2.connect(analyser);\r\n        analyser.connect(contextNew.destination);\r\n        analyser.fftSize = 512;\r\n        let bufferLength = analyser.frequencyBinCount;\r\n        let dataArray = new Uint8Array(bufferLength);\r\n\r\n        //audioEl.play();\r\n        this._data = {\r\n            analyser,\r\n            dataArray\r\n        };\r\n        return this._data;\r\n    }\r\n};\r\n\r\nexport default audioPlayer;","import  React from 'react';\r\nimport styles from './ChooseTheme.module.css';\r\n\r\nconst ChooseTheme = (props) => {\r\n    const themes = ['Red-blue','Red-green', 'Pink-blue', 'Pink-green',\r\n        'Green-blue', 'Blue-green','Six-colors', 'Blue-green-red'\r\n    ];\r\n\r\n    const theme = themes.map((el, i) => {\r\n        return <label key={i} className={styles.element}>\r\n            <input type='radio' onChange={(e) => props.setTheme(e.target.value)}\r\n                   name='theme' value={el}/>\r\n            <span><b>{el}</b></span>\r\n        </label>\r\n    });\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><h3>Choose color theme:</h3></legend>\r\n            <section className={styles.chooseTheme}>\r\n                {theme}\r\n            </section>\r\n        </fieldset>\r\n    );\r\n};\r\n\r\nexport default ChooseTheme;","import  React from 'react';\r\nimport styles from './ChooseSizeField.module.css';\r\n\r\nconst ChooseSizeField = (props) => {\r\n    const fieldsArray = ['10*2', '5*5', '10*10', '16*9', '12*8', '17*10'];\r\n\r\n    const fields = fieldsArray.map((el, i) => {\r\n        return <label key={i} className={styles.choose}>\r\n            <span><b>{el}</b></span>\r\n            <input type='radio' onChange={(e) => props.setFieldSize(e.target.value)}\r\n                   name='field' value={el}/>\r\n        </label>\r\n    });\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend><h3>Choose field size:</h3></legend>\r\n            <section className={styles.wrapper}>\r\n            {fields}\r\n            </section>\r\n        </fieldset>\r\n    );\r\n};\r\n\r\nexport default ChooseSizeField;","import React from 'react';\r\nimport styles from './Settings.module.css'\r\nimport ChooseTheme from \"../ChooseTheme/ChooseTheme\";\r\nimport ChooseSizeField from \"../ChooseSizeField/ChooseSizeField\";\r\n\r\n\r\nfunction Settings(props) {\r\n    return (\r\n        <article className={styles.settings}>\r\n            <ChooseSizeField setFieldSize={props.setFieldSize}/>\r\n            <ChooseTheme setTheme={props.setTheme}/>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, {useState} from 'react';\r\nimport styles from './PageStart.module.css';\r\n\r\nfunction PageStart() {\r\n    const [isLanguageEn, setLanguage] = useState(true);\r\n\r\n    let changeLanguage = () => {\r\n        setLanguage(!isLanguageEn);\r\n    };\r\n\r\n    let descriptions = {\r\n        false: <section>\r\n            <h3>Описание задачи:</h3>\r\n            <p>Cделать графический визуализатор для музыки.</p>\r\n            <p> Пока играет ваша любимая мп3шка, на экране видна сетка 16х9 квадратов,\r\n                квадраты меняют цвет и яркость в зависимости от громкости в разных частях звукового спектра,\r\n                каждый квадрат отвечает за свою часть диапазона.</p>\r\n\r\n            <p>Результат задания в виде ссылки на гитхаб надо прислать по адресу godelmastery@gmail.com</p>\r\n\r\n            <h3>Задания со звездочкой:</h3>\r\n            <ul>\r\n                <li>рабочее решение собрано в один html-файл (включает скрипты, стили и саму музыку) и выложено на\r\n                    github-pages\r\n                </li>\r\n                <li>пользователь может задать количество квадратов (5х5, 10х2, …)</li>\r\n                <li>можно выбрать «тему» — диапазон цветов которые появляются на визуализаторе.</li>\r\n            </ul>\r\n            <h3>Задача выполнена с помощью библиотеки React.</h3>\r\n        </section>,\r\n        true: <section>\r\n            <h3>Description of the task:</h3>\r\n            <p>Make a graphic visualizer for music.</p>\r\n            <p>While your favorite mp3 is playing, a 16x9 square grid is visible on the screen,\r\n                squares change color and brightness depending on the volume in different parts of the sound spectrum,\r\n                each square is responsible for its part of the range.</p>\r\n\r\n            <p>The result of the task in the form of a link to the github should be sent to the address\r\n                godelmastery@gmail.com</p>\r\n\r\n            <h3>Advanced tasks:</h3>\r\n            <ul>\r\n                <li>The working solution is assembled in one html-file (includes scripts, styles and music itself) and\r\n                    laid out on\r\n                    github-pages\r\n                </li>\r\n                <li>the user can set the number of squares (5x5, 10x2, ...)</li>\r\n                <li>you can select the “theme” - the range of colors that appear on the visualizer.</li>\r\n            </ul>\r\n            <h3>Task completed using React library.</h3>\r\n        </section>\r\n    };\r\n\r\n    return (\r\n        <article className={styles.taskDescription}>\r\n            <section className={styles.buttonAndHref}>\r\n                <button onClick={changeLanguage}>\r\n                    {!isLanguageEn ? 'Translate description task to english'\r\n                        : 'Translate description task to russian'}\r\n                </button>\r\n                <a href={'https://github.com/OllenkA/color-music'}\r\n                   target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    {isLanguageEn ? \"Look the code of the completed task\" :\r\n                        \"Посмотреть на код выполненного задания\"}</a>\r\n            </section>\r\n            {descriptions[isLanguageEn]}\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default PageStart;","import React from 'react';\r\nimport styles from './FieldGame.module.css';\r\nimport Settings from \"../Settings/Settings\";\r\nimport colorCreator from \"../../utils/colorCreator\";\r\nimport PageStart from \"../PageStart/PageStart\";\r\n\r\nfunction FieldGameView({setMusic, audioElRef, fieldWidth,\r\n                           setFieldSize, setTheme, newData, theme, isButtonPressed}) {\r\n\r\n    let cells = newData.map((el, i) => {\r\n        let newColor = colorCreator.getColors(el, theme);\r\n        return <div key={i}\r\n                    style={{backgroundColor: newColor}}\r\n                    className={styles.cell}>\r\n        </div>\r\n    });\r\n\r\n\r\n    return (\r\n        <article>\r\n            <section className={styles.audioSection}>\r\n                <input type='file' accept='audio/*' onChange={setMusic} className={styles.input}/>\r\n                <audio ref={audioElRef} controls={true} className={styles.audio}/>\r\n            </section>\r\n            <section className={styles.wrapper}>\r\n                {isButtonPressed ? <article className={styles.container} style={fieldWidth}>\r\n                    {cells}\r\n                </article> : <PageStart/>}\r\n                <Settings setFieldSize={setFieldSize} setTheme={setTheme}/>\r\n            </section>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default FieldGameView;","import React, {useRef, useState} from 'react';\r\nimport colorCreator from \"../../utils/colorCreator\";\r\nimport audioPlayer from \"../../utils/AudioPlayer\";\r\nimport FieldGameView from \"./FieldGameView\";\r\n\r\nfunction FieldGame() {\r\n    const audioElRef = useRef(null);\r\n    const [data, setData] = useState([]);\r\n    const [isButtonPressed, pressButton] = useState(false);\r\n    const [fieldSize, setFieldSize] = useState('');\r\n    const [theme, setTheme] = useState('');\r\n\r\n    const newData = colorCreator.getNewData(fieldSize, data);\r\n\r\n    let setMusic = async (e) => {\r\n        let file = e.target.files[0];\r\n        if (!file) return;\r\n        pressButton(true);\r\n\r\n        audioPlayer.setFileAndPlay(audioElRef.current, file);\r\n        let {analyser, dataArray} = audioPlayer.createAnalyser(audioElRef.current, file);\r\n\r\n        renderFrame();\r\n\r\n        function renderFrame() {\r\n            requestAnimationFrame(renderFrame);\r\n            analyser.getByteFrequencyData(dataArray);\r\n            setData(Array.from(dataArray))\r\n        }\r\n    };\r\n\r\n    let fieldWidth = colorCreator.getFieldStyle(fieldSize);\r\n\r\n    return (\r\n        <FieldGameView audioElRef={audioElRef}\r\n                       fieldWidth={fieldWidth}\r\n                       setFieldSize={setFieldSize}\r\n                       setMusic={setMusic}\r\n                       setTheme={setTheme}\r\n                       theme={theme}\r\n                       newData={newData}\r\n                       isButtonPressed={isButtonPressed}\r\n        />\r\n    );\r\n}\r\n\r\nexport default FieldGame;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGithub, faGoogle, faLinkedin, faTelegram} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={styles.footer}>\r\n            <div className={styles.container}>\r\n                <span className={styles.blockTitle}>Task completed by\r\n                    <a href={' https://ollenka.github.io/Portfolio-1'}\r\n                       target=\"_blank\" rel=\"noreferrer noopener\" className={styles.hrefToPortfolio}> Olga Shamko</a>\r\n                </span>\r\n\r\n                <nav className={styles.socialBlock}>\r\n                    <a className={styles.socialIcon}\r\n                       href={'https://www.linkedin.com/in/olga-shamko-153715191/'}\r\n                       target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        <FontAwesomeIcon size={'2x'} icon={faLinkedin}/>\r\n                    </a>\r\n\r\n                    <a className={styles.socialIcon}\r\n                       href={'https://t.me/Ollenka_Shamko'}\r\n                       target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        <FontAwesomeIcon size={'2x'} icon={faTelegram}/>\r\n                    </a>\r\n\r\n                    <a className={styles.socialIcon}\r\n                       href={'https://github.com/OllenkA'}\r\n                       target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        <FontAwesomeIcon size={'2x'} icon={faGithub}/>\r\n                    </a>\r\n\r\n                    <a className={styles.socialIcon}\r\n                       href={'https://shamko.olga2018@gmail.com'}\r\n                       target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        <FontAwesomeIcon size={'2x'} icon={faGoogle}/>\r\n                    </a>\r\n                </nav>\r\n                {/*<span className={styles.blockTitle}>© 2019 All Rights Reserved.</span>*/}\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport FieldGame from \"./components/FieldGame/FieldGame\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <FieldGame/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}